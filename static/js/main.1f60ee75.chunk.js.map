{"version":3,"sources":["styles/AppStyles.js","reducers/todo.reducers.js","constants/actions.js","contexts/todo.context.js","styles/TodoStyles.js","components/Todo.js","components/TodoList.js","styles/TodoFormStyles.js","components/TodoForm.js","components/TodoApp.js","components/App.js","serviceWorker.js","index.js"],"names":["makeStyles","header","textAlign","color","margin","fontSize","fontWeight","todosReducer","state","action","type","payload","id","uuid","task","complete","filter","todo","console","log","map","defaultTodos","TodosContext","createContext","TodosContextProvider","props","useReducer","localData","localStorage","getItem","JSON","parse","todos","dispatch","useEffect","setItem","stringify","Provider","value","children","Todo","width","height","display","alignItems","justifyContent","paddingLeft","lineHeight","overflowX","transition","background","cursor","opacity","icons","marginRight","float","useContext","classes","useStyles","className","onClick","style","textDecoration","e","stopPropagation","TodoList","key","TodoForm","marginBottom","input","border","borderBottom","outline","initialValue","useState","setValue","handleChange","target","clearValue","useInputState","onSubmit","preventDefault","placeholder","onChange","TodoApp","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1f60ee75.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n  header: {\n    textAlign: \"center\",\n    \"& h1\": {\n      color: \"#2c3e50\",\n      margin: \"5vh 0 0 0\",\n      fontSize: \"5rem\",\n      fontWeight: \"300\",\n      \"& span\": {\n        fontWeight: \"700\"\n      }\n    },\n    \"& h2\": {\n      color: \"#2c3e50\",\n      fontSize: \"1.25rem\",\n      fontWeight: \"300\"\n    }\n  }\n});\n","import uuid from \"uuid/dist/v4\";\nimport { ADD_TODO, REMOVE_TODO, TOGGLE_TODO } from \"../constants/actions\";\n\nconst todosReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      state = action.payload ? [...state, { id: uuid(), task: action.payload, complete: false }] : state;\n      return  state;\n    case REMOVE_TODO:\n      state = state.filter(todo => todo.id !== action.payload);\n      return state;\n    case TOGGLE_TODO:\n      console.log(action.payload);\n      state = state.map(todo =>\n        todo.id === action.payload ? { ...todo, complete: !todo.complete } : todo\n      );\n      return state;\n    default:\n      return state;\n  }\n};\nexport default todosReducer;\n\n","export const ADD_TODO = 'ADD_TODO';\nexport const REMOVE_TODO = 'REMOVE_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';","import React, { createContext, useReducer, useEffect } from \"react\";\n\nimport todosReducer from \"../reducers/todo.reducers\";\n\nconst defaultTodos = [{ id: 1, task: \"sample\", complete: false }];\n\nexport const TodosContext = createContext();\nexport const DispatchContext = createContext();\n\nexport function TodosContextProvider(props) {\n  //todos is the state returned by useReducer\n  const [todos, dispatch] = useReducer(todosReducer, defaultTodos, () => {\n    const localData = localStorage.getItem(\"todos\");\n    return localData ? JSON.parse(localData) : defaultTodos;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  // const [,dispatch] = useReducer(todosReducer, defaultTodos);\n\n  return (\n    <TodosContext.Provider value={{ todos, dispatch }}>\n      {props.children}\n    </TodosContext.Provider>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  Todo: {\n    width: '100%',\n    height: '2.5rem',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: '0.5rem',\n    color: '#34495e',\n    fontSize: '1rem',\n    lineHeight: '2.5rem',\n    overflowX: 'hidden',\n    transition: 'all 0.3s ease',\n    '&:hover': {\n      background: 'rgba(0, 0, 0, 0.03)',\n      cursor: 'pointer'\n    },\n    '&:hover div': {\n      opacity: '1'\n    }\n  },\n  icons: {\n    width: '40px',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginRight: '1rem',\n    float: 'right',\n    transition: 'all 0.3s',\n    opacity: '0'\n  }\n});","import React, { useContext } from \"react\";\nimport { TodosContext } from \"../contexts/todo.context\";\nimport { TOGGLE_TODO, REMOVE_TODO } from \"../constants/actions\";\nimport useStyles from \"../styles/TodoStyles\";\n\nfunction Todo({ todo }) {\n  const { dispatch } = useContext(TodosContext);\n  const classes = useStyles();\n  const { id, task, complete } = todo;\n  return (\n    <li\n      className={classes.Todo}\n      onClick={() => {\n        dispatch({ type: TOGGLE_TODO, payload: id });\n      }}\n    >\n      <span\n        style={{\n          textDecoration: complete ? `line-through` : ``,\n          color: complete ? `#9aa1a5` : `#36454F`\n        }}\n      >\n        {task}\n      </span>\n      <div className=\"icon\">\n        <i className=\"fas fa-trash\" \n         onClick={ (e) => {\n          e.stopPropagation();\n          dispatch({type: REMOVE_TODO, payload: id})\n         }}/>\n      </div>\n    </li>\n  );\n}\n\nexport default Todo;\n","import React, { useContext } from \"react\";\n\nimport Todo from './Todo';\nimport { TodosContext } from \"../contexts/todo.context\";\n\nfunction TodoList() {\n  const { todos } = useContext(TodosContext);\n\n  return (\n    <ul style={{ paddingLeft: 10, width: \"95%\", color: '#2c3e50' }}>\n      {todos.map(todo => (\n       <Todo key={todo.id} todo={todo}/>\n      ))}\n    </ul>\n  );\n}\nexport default TodoList;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n    TodoForm: {\n        width: '100%',\n        marginBottom: '1rem'\n    },\n    input : {\n        width: '100%',\n        height: '2rem',\n        background: 'none',\n        border: 'none',\n        borderBottom: '1px solid #34495e',\n        color: '#34495e',\n        fontSize: '1.2rem',\n        fontWeight: '300',\n        outline: 'none'\n    }\n});","import React, { useState, useContext } from \"react\";\nimport { TodosContext } from \"../contexts/todo.context\";\nimport makeStyles from \"../styles/TodoFormStyles\";\nimport { ADD_TODO } from \"../constants/actions\";\n\nfunction useInputState(initialValue = \"\") {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = e => setValue(e.target.value);\n  const clearValue = () => setValue(\"\");\n\n  return [value, handleChange, clearValue];\n}\n\nfunction TodoForm() {\n  const { dispatch } = useContext(TodosContext);\n  const [value, handleChange, clearValue] = useInputState();\n  const classes = makeStyles();\n\n  return (\n    <form \n    onSubmit={(e)=> {\n        e.preventDefault();\n        dispatch({type: ADD_TODO, payload: value});\n        clearValue();\n    } }>\n      <input\n        type=\"text\"\n        placeholder=\"Hoy tengo que...\"\n        value={value}\n        onChange={handleChange}\n        className={classes.input}\n      />\n    </form>\n  );\n}\nexport default TodoForm;\n\n","import React from \"react\";\nimport { TodosContextProvider } from \"../contexts/todo.context\";\nimport TodoList from \"./TodoList\";\nimport TodoForm from \"./TodoForm\";\n\nfunction TodoApp() {\n  return (\n    <TodosContextProvider>\n      <TodoForm/>\n      <TodoList />\n    </TodosContextProvider>\n  );\n}\nexport default TodoApp;\n\n\n\n","import React from \"react\";\n\nimport makeStyles from \"../styles/AppStyles\";\nimport TodoApp from \"./TodoApp\";\n\nfunction App() {\n  const classes = makeStyles();\n\n  return (\n    <div className=\"App\">\n\n      <div className={classes.header}>\n        <h1>\n          para<span>HACER</span>\n        </h1>\n        <h2>Empieza el día con tu propósito en mente</h2>\n      </div>\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}